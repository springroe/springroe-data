import java.text.SimpleDateFormat

Date buildTimeAndDate = new Date()

def publishPropertiesFile = rootProject.file('publish.properties')
def publishProperties = new Properties()
assert publishPropertiesFile.exists()
publishPropertiesFile.withReader("UTF-8") { reader -> publishProperties.load(reader) }
ext {
    buildDate = new SimpleDateFormat('yyyy-MM-dd').format(buildTimeAndDate)
    buildTime = new SimpleDateFormat('HH:mm:ss.SSSZ').format(buildTimeAndDate)
    projectUrl = "https://github.com/springroe/springroe-data"
    sonatypeUser = publishProperties['ossUser']
    sonatypePassword = publishProperties['ossPassword']
    shouldSyncWithMavenCentral = project.hasProperty('ossSync') ?
            project.property('ossSync') :
            System.getenv('SONATYPE_SYNC')
}

apply plugin: 'maven-publish'

jar {
    manifest {
        attributes(
                'Implementation-Title': project.name,
                'Implementation-Version': new Object() {
                    String toString() { project.version }
                },
                'Created-By': System.getProperty('java.version') + ' (' + System.getProperty('java.vendor') + ')',
                'Built-With': "gradle-${project.getGradle().getGradleVersion()}, groovy-${GroovySystem.getVersion()}",
                'Build-Time': "${new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")}",
                'Built-By': System.getProperty('user.name'),
                'Built-On': "${InetAddress.localHost.hostName}/${InetAddress.localHost.hostAddress}"
        )
    }
}

def generatedSources = "$buildDir/generated/source/apt/main"

task packageSources(type: Jar) {
    archiveClassifier.set("sources")
    from sourceSets.main.allSource
    from generatedSources
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier.set("javadoc")
    from javadoc.destinationDir
}

artifacts {
    archives packageSources
    archives javadocJar
}

javadoc {
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
    if (JavaVersion.current().isJava8Compatible()) {
        options.addStringOption('Xdoclint:none', '-quiet')
    }
}

publishing {
    repositories {
        maven {
            name = 'OSSRH'
            url = 'https://s01.oss.sonatype.org/content/repositories/snapshots/'
            credentials {
                username = "$sonatypeUser"
                password = "$sonatypePassword"
            }
        }
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/OWNER/REPOSITORY")
            credentials {
                username = project.findProperty("gpr.user") ?: "kongsiyu"
                password = project.findProperty("gpr.key") ?: "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"
            }
        }
    }
    publications {
        mavenJava(MavenPublication) {
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = "${project.name}"
                url = "${projectUrl}"
                description = "JSON API documentation for spring based applications"

                scm {
                    url = "scm:git:git@github.com:springroe/springroe-data.git"
                    connection = 'scm:git:git@github.com:springroe/springroe-data.git'
                    developerConnection = 'scm:git:git@github.com:springroe/springroe-data.git'
                }

                licenses {
                    license {
                        name = "The Apache Software License, Version 2.0"
                        url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
                        distribution = "repo"
                    }
                }
                developers {
                    developer {
                        id = "kongsiyu"
                        name = "Siyu Kong"
                        email = "boil@vip.qq.com"
                    }
                }
            }
            artifact packageSources
            artifact javadocJar
        }
        gpr(MavenPublication) {
            from(components.java)
        }
    }
}